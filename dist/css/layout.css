/**
 * @file
 * sass/layout.scss
 *
 * CSS rules that layout a page.
 */
/**
 * @file
 * sass/partials/common/_imports.scss
 *
 * Importing this file should not generate any CSS.
 */
/**
 * @file
 * sass/partials/common/_variables.scss
 *
 * Based on http://bitters.bourbon.io/
 */
/**
 * @file
 * sass/partials/common/_placeholders.scss
 */
.page__middle {
  padding-left: 5%;
  padding-right: 5%;
}

/**
 * @file
 * sass/partials/common/_grid-settings.scss
 *
 * Based on http://bitters.bourbon.io/
 */
/**
 * @file
 * sass/partials/layout/templates/_global.scss
 *
 * @see page.html.twig
 */
.page {
  padding-bottom: 4rem;
}

.page--front {
  padding-bottom: 1rem;
}

.page__header {
  width: 100%;
}

@media screen and (max-width: 524px) {
  .page__header {
    padding-left: 64px;
  }
}

.page__middle main {
  max-width: 32rem;
  margin-left: auto;
  margin-right: auto;
}

.page__middle main::after {
  clear: both;
  content: "";
  display: table;
}

/**
 * @file
 * sass/partials/layout/templates/_off-canvas.scss
 *
 * Pure CSS (no JavaScript required) implementation.
 * Layout styles only in this file.
 * Uses Neat grid framework media mixin.
 *
 * @see page.html.twig
 */
#off-canvas-label, .page, .off-canvas {
  -webkit-transition: left .4s;
  -moz-transition: left .4s;
  -o-transition: left .4s;
  -ms-transition: left .4s;
  transition: left .4s;
}

.layout-container {
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

#off-canvas-checkbox {
  display: block;
  position: absolute;
  top: -9999px;
  left: -9999px;
}

#off-canvas-label {
  display: block;
  position: fixed;
  left: 0;
  z-index: 501;
  width: 64px;
  height: 64px;
  padding: 10px;
  background-position: 10px 10px;
  background-size: 44px 44px;
  background-repeat: no-repeat;
  background-image: url("../images/menu.png");
  background-image: url("../images/menu.svg");
  cursor: pointer;
}

.page {
  position: absolute;
  left: 0;
  width: 100%;
  height: auto;
  overflow: visible;
}

.page__header {
  position: fixed;
  z-index: 500;
  height: 4rem;
}

.off-canvas {
  position: fixed;
  min-height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

@media screen and (max-width: 524px) {
  .off-canvas {
    left: -80%;
    width: 80%;
  }
}

@media screen and (min-width: 525px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

@media screen and (min-width: 801px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

@media screen and (min-width: 1025px) {
  .off-canvas {
    left: -20rem;
    width: 20rem;
  }
}

.off-canvas-hidden {
  display: none;
}

#off-canvas-checkbox:checked ~ .page {
  position: fixed;
  height: 100%;
  overflow: hidden;
}

@media screen and (max-width: 524px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 80%;
  }
}

@media screen and (min-width: 525px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

@media screen and (min-width: 801px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

@media screen and (min-width: 1025px) {
  #off-canvas-checkbox:checked ~ #off-canvas-label,
  #off-canvas-checkbox:checked ~ .page {
    left: 20rem;
  }
}

#off-canvas-checkbox:checked ~ .off-canvas {
  left: 0;
}

.page__middle {
  margin-top: 8rem;
}

#off-canvas-checkbox:checked ~ .page .page__header {
  position: static;
}

#off-canvas-checkbox:checked ~ .page .page__middle {
  margin-top: 4rem;
}

/**
 * @file
 * sass/partials/layout/templates/_page--front.scss
 *
 * @see page.html.twig
 */
.page--front .comment-add {
  display: none;
}

.view--frontpage .views-row + .views-row {
  margin-top: 4rem;
}

/*# sourceMappingURL=data:application/json;base64, */
